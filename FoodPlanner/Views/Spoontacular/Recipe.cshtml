@{
    ViewData["Title"] = "Online Recipe";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    var recipe = (OnlineRecipe)ViewBag.Recipe;
}

<script src="~/js/recipeInstructions.js" asp-append-version="true"></script>

<div class="container flistPage">
    <p style="text-align:right;">
        @if (ViewData.ContainsKey("PreviousSearchQuery"))
        {
            <a class="btn dark btn-coffee" asp-action="Index" asp-route-query="@ViewData["PreviousSearchQuery"]" style="width: 100px;">Back</a>
        }
        else
        {
            <a class="btn dark btn-coffee" asp-action="Index" style="width: 100px;">Back</a>
        }
    </p>
    <hr />
    <form asp-action="AddRecipe">

        <div class="row form-group">
            <div class="col-12">
                <input name="Name" type="text" value="@recipe.title" style="width: 100%;" />
            </div>
        </div>

        <div class="row form-group">
            <div class="col-12" style="text-align: center;">
                <img src="@recipe.imagePath" alt="Image" style="height: 200px;">
            </div>
        </div>

        <div class="row form-group">
            <div class="col-2">
                Serves:
            </div>
            <div class="col-10">
                <input name="Servings" type="text" value="@recipe.servings" />
            </div>
        </div>

        <div class="row form-group">
            <div class="col-2">
                Cuisine:
            </div>
            <div class="col-10">
                <input name="Cuisine" type="text" value="@recipe.cuisines.FirstOrDefault()" />
            </div>
        </div>

        <hr />

        <div class="table form-group">
            <div class="row">
                <div class="col-8">
                    Name
                </div>
                <div class="col-4">
                    Quantity
                </div>
            </div>
            @{
                var ingredients = (List<OnlineIngredient>)recipe.extendedIngredients;
            }
            @if (ingredients.Count > 0)
            {
                @foreach (var ingredient in ingredients)
                {
                    <div class="row">
                        <div class="col-4" style="padding: 5px;">
                            @*<input name="Names" type="text" value="@ingredient.name" />*@
                            <input id="ProductType_Name" name="Names" class="ui-autocomplete-input" type="text" value="@ingredient.name" autocomplete="on" style="padding: 5px; width: 100%;" />
                        </div>
                        <div class="col-4" style="padding: 5px;">
                            @*<input name="Aisles" type="text" value="@ingredient.aisle" />*@
                            <input id="Category_Name" name="Aisles" class="ui-autocomplete-input" type="text" value="@ingredient.aisle" autocomplete="on" style="padding: 5px; width: 100%;" />
                        </div>
                        <div class="col-4" style="padding: 0px; vertical-align: middle; margin: auto;">
                            <input name="Amounts" type="number" style="width: 47%" value="@ingredient.amount" />
                            <input name="Units" type="text" style="width: 47%" value="@ingredient.unit" />
                        </div>
                    </div>
                }


            }
        </div>

        <div class="table form-group">

            <input id="RecipeIngredients" type="hidden" value="@System.Text.Json.JsonSerializer.Serialize(recipe.extendedIngredients)" />

            @{
                var instructions = (OnlineInstructions)recipe.analyzedInstructions.FirstOrDefault();
            }
            @if (instructions != null && instructions.steps.Count > 0)
            {
                @foreach (var step in instructions.steps)
                {
                    <div class="row">
                        <div class="col-2" style="padding: 5px;">
                            <input id="Step_Number" name="StepNumbers" class="ui-autocomplete-input" type="text" value="@step.number" autocomplete="on" style="padding: 5px; width: 100%;" />
                        </div>
                        <div class="col-10" style="padding: 5px;">
                            <input id="Step_Text" name="StepTexts" class="ui-autocomplete-input stepTextInput" type="text" value="@step.step" autocomplete="on" style="padding: 5px; width: 100%;" />
                        </div>
                    </div>
                }


            }
        </div>

        <input type="hidden" value="@ViewData["PreviousSearchQuery"]" name="previousSearchQuery" />

        <hr />

        <div class="form-group">
            <input type="submit" value="Download Recipe" class="nav-link navbar-link btn btn-primary" />
        </div>

    </form>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/lib/jquery-ui/jquery-ui.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('#ProductType_Name').autocomplete({
                source: '/Products/GetProductTypes'
            });
            $('#Category_Name').autocomplete({
                source: '/Products/GetCategories'
            });

            // When document has loaded then run a InstructionTextFormat on the instructions
            var stepTextInputs = document.getElementsByClassName('stepTextInput');
            for (var i = 0; i < stepTextInputs.length; i++) {
                var stepTextInput = stepTextInputs[i];
                InstructionTextChanged(stepTextInput);
            }

        });
    </script>
}
