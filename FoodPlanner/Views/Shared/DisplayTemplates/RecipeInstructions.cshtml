@using FoodPlanner.Classes
@using System.Text.RegularExpressions


@model RecipeInstructions

@if (Model != null)
{
    <div style="margin-bottom: 20px;">

        @foreach (var recipeStep in Model.Steps.OrderBy(s => s.Order))
        {
            if (string.IsNullOrEmpty(recipeStep.Text))
            {
                continue;
            }

            <div style="margin: 3px; display: flex;">
                <div style="width: 20%;">

                    @recipeStep.Order .

                </div>
                <div style="width: 80%;">
                    @{
                        string formattedText = recipeStep.Text;
                        string pattern = @"""([\w\s]+)""";
                        Regex rg = new Regex(pattern);

                        MatchCollection matchedIngredients = rg.Matches(recipeStep.Text);
                        for (int count = 0; count < matchedIngredients.Count; count++)
                        {
                            var matchedIngredientText = matchedIngredients[count].Value;
                            var matchedIngredient = matchedIngredients[count].Groups[1].Value;

                            var split = formattedText.Split(matchedIngredientText, 2);

                            @split[0]

                            formattedText = split[1];

                            if (ViewBag.Ingredients != null)
                            {
                                var ingredients = (List<Ingredient>)ViewBag.Ingredients;
                                var ingredient = ingredients.Find(i => i.Name == matchedIngredient);

                                if (ingredient == null)
                                {
                                    @matchedIngredient
                                }
                                else
                                {
                                    await Html.RenderPartialAsync("IngredientHighlight", ingredient);
                                }
                            }
                            else
                            {
                                @matchedIngredient
                            }
                        }

                        @formattedText
                    }
                </div>
            </div>
        }
    </div>
}