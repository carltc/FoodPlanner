@model FoodPlanner.Models.Recipe

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
    function addIngredient() {
        var IL = document.getElementById('IngredientList');
        var IR = document.getElementsByName('IngredientRow')[0];
        var newRow = IR.cloneNode(true);
        IL.appendChild(newRow);
    }
</script>

<h1>Create</h1>

<h4>Recipe</h4>
<hr />
<div class="row">
    <div class="col">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group" id="IngredientList">
                <div class="row" name="IngredientRow">
                    <div class="col">
                        <select name="ProductIds" class="form-control" asp-items="ViewBag.ProductId"></select>
                    </div>
                    <div class="col">
                        <input type="number" name="Quantities" />
                    </div>
                    <div class="col">
                        <select name="Units"
                                class="form-control"
                                asp-items="Html.GetEnumSelectList<FoodPlanner.Classes.Unit>()">
                        </select>
                    </div>
                </div>
            </div>

            <button type="button" onclick="addIngredient()">Add Ingredient</button>

            <hr />

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
